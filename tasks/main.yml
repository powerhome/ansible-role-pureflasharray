---
# tasks file for purefa
- name: Collect array information
  purestorage.flasharray.purefa_info:
    gather_subset:
      - minimum
      - config
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  register: array_info

- name: Manage array name
  purestorage.flasharray.purefa_arrayname:
    name: "{{ purefa_array_name }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_array_name is defined
  tags:
  - purefa_array_name

- name: Manage Phonehome
  purestorage.flasharray.purefa_phonehome:
    state: "{{ purefa_phonehome_state }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_phonehome_state is defined
  tags:
  - purefa_phonehome

- name: Manage Remote Assist port
  purestorage.flasharray.purefa_ra:
    state: "{{ purefa_remote_assist_state }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_remote_assist_state is defined
  tags:
  - purefa_ra

- name: Set NTP server addresses
  purestorage.flasharray.purefa_ntp:
    state: "{{ 'present' if purefa_ntp_servers else 'absent' }}"
    ntp_servers: "{{ purefa_ntp_servers }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_ntp_servers is defined
  tags:
  - purefa_ntp

- name: Set DNS server addresses
  purestorage.flasharray.purefa_dns:
    state: "{{ 'present' if purefa_dns_servers else 'absent' }}"
    domain: "{{ purefa_domain | default(omit) }}"
    nameservers: "{{ purefa_dns_servers }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_dns_servers is defined
  tags:
  - purefa_dns

- name: Manage local users
  purestorage.flasharray.purefa_user:
    name: "{{ item.name }}"
    password: "{{ item.password}}"
    old_password: "{{ item.old_password | default(omit) }}"
    role: "{{ item.role | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_users }}"
  when: purefa_users is defined
  tags:
  - purefa_users

- name: Manage directory service
  include_tasks: directory_service.yml
  when: purefa_ldap is defined
  tags:
  - purefa_ldap

# module is not idempotent
- name: Manage v2c SNMP manager
  purestorage.flasharray.purefa_snmp:
    state: "{{ item.state | default('present') }}"
    name: "{{ item.name }}"
    community: "{{ item.community }}"
    host: "{{ item.host }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_snmp }}"
  when: purefa_snmp is defined
  tags:
  - purefa_snmp

- name: Set array syslog servers
  purestorage.flasharray.purefa_syslog:
    state: "{{ purefa_syslog.state | default('present')}}"
    address: "{{ purefa_syslog.address }}"
    port: "{{ purefa_syslog.port }}"
    protocol: "{{ purefa_syslog.protocol }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_syslog is defined
  tags:
  - purefa_syslog

- name: Set SMTP settings
  purestorage.flasharray.purefa_smtp:
    state: "{{ 'present' if purefa_smtp else 'absent' }}"
    sender_domain: "{{ purefa_domain }}"
    password: "{{ purefa_smtp.password }}"
    user: "{{ purefa_smtp.user }}"
    relay_host: "{{ purefa_smtp.relay_host }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  when: purefa_smtp is defined
  tags:
  - purefa_smtp

- name: Manage email recipients alerts
  purestorage.flasharray.purefa_alert:
    address: "{{ item.name }}"
    enabled: "{{ item.enabled }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_alerts }}"
  # smtp config need to be different to run (module isnt idempotent)
  when: item not in array_info.purefa_info.config.smtp
  tags:
  - purefa_alerts

- name: Manage replication connections
  purestorage.flasharray.purefa_connect:
    connection: "{{ item.connection | default('async') }}"
    target_url: "{{ item.target_url }}"
    target_api: "{{ item.target_api }}"
    state: "{{ item.state | default('present') }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_connections }}"
  when: purefa_connections is defined
  tags:
  - purefa_connections

- name: Manage volume groups
  purestorage.flasharray.purefa_vg:
    name: "{{ item.name }}"
    eradicate: "{{ item.eradicate | default(omit) }}"
    state: "{{ item.state | default(omit) }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_volumegroups }}"
  when: purefa_volumegroups is defined
  tags:
  - purefa_volumegroups

- name: Manage volumes
  purestorage.flasharray.purefa_volume:
    name: "{{ item.0.name }}/{{ item.1.name }}"
    size: "{{ item.1.size }}"
    target: "{{ item.1.target | default(omit) }}"
    overwrite: "{{ item.1.overwrite | default(omit) }}"
    qos: "{{ item.1.qos | default(omit) }}"
    eradicate: "{{ item.1.eradicate | default(omit) }}"
    state: "{{ item.1.state | default(omit) }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_volumegroups | subelements('volumes') }}"
  when: purefa_volumegroups is defined
  tags:
  - purefa_volumes

- name: Manage hosts
  purestorage.flasharray.purefa_host:
    host: "{{ item.1.name }}"
    lun: "{{ item.1.lun | default(omit) }}"
    iqn: "{{ item.1.iqn | default(omit) }}"   # iscsi: iSCSI
    nqn: "{{ item.1.nqn | default(omit) }}"   # nvme: NVMe
    wwns: "{{ item.1.wwns | default(omit) }}" # fc: FibreChannel
    personality: "{{ item.1.personality | default(omit) }}"
    preferred_array: "{{ item.1.preferred_array | default('delete') }}"
    protocol: "{{ item.1.protocol | default(omit) }}" # iscsi, nvme, fc or mixed
    state: "{{ item.1.state | default ('present') }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_hostgroups | subelements('hosts') }}"
  when: purefa_hostgroups is defined
  tags:
  - purefa_hosts

- name: Manage host groups
  purestorage.flasharray.purefa_hg:
    host: "{{ item.hosts | json_query('[].name') or omit }}"
    hostgroup: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    volume: "{{ item.volumes | default(omit) }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_hostgroups }}"
  when: purefa_hostgroups is defined
  tags:
  - purefa_hostgroups

- name: Manage protection groups
  purestorage.flasharray.purefa_pg:
    pgroup: "{{ item.pg.name | default(item.name) }}"
    target: "{{ item.pg.target | default(pgroup_target) }}"
    # host: "{{ item.host | default(omit) }}" # list
    # hostgroup: "{{ item.hostgroup | default(omit) }}" # list
    volume: "{{ item.volumes | json_query('[].name') | map('regex_replace', '^(.*)$', item.name+'/\\1') | list }}" # list of volumes adding 'volumegroup/' as prefix
    state: "{{ item.pg.state | default(omit) }}"
    eradicate: "{{ item.pg.eradicate | default(omit) }}"
    enabled: "{{ item.pg.enabled | default(omit) }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_volumegroups }}"
  when:
  - purefa_volumegroups is defined
  - item.pg is defined
  tags:
  - purefa_protectiongroups

- name: Update protection group replication schedule
  purestorage.flasharray.purefa_pgsched:
    name: "{{ item.pg.name | default(item.name) }}"
    schedule: replication
    enabled: "{{ item.pg.replication.enabled }}"
    replicate_frequency: "{{ item.pg.replication.frequency }}"
    replicate_at: "{{ item.pg.replication.at }}"
    target_per_day: "{{ item.pg.replication.per_day }}"
    target_all_for: "{{ item.pg.replication.all_for }}"
    blackout_start: "{{ item.pg.replication.blackout_start }}"
    blackout_end: "{{ item.pg.replication.blackout_end }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_volumegroups }}"
  when:
  - purefa_volumegroups is defined
  - item.pg is defined
  - item.pg.replication is defined
  tags:
  - purefa_protectiongroups

- name: Update protection group snapshot schedule
  purestorage.flasharray.purefa_pgsched:
    name: "{{ item.pg.name | default(item.name) }}"
    schedule: snapshot
    enabled: "{{ item.pg.snapshot.enabled }}"
    snap_frequency: "{{ item.pg.snapshot.frequency }}"
    snap_at: "{{ item.pg.snapshot.at }}"
    per_day: "{{ item.pg.snapshot.per_day }}"
    all_for: "{{ item.pg.snapshot.all_for }}"
    fa_url: "{{ purefa_url }}"
    api_token: "{{ purefa_api_token }}"
  loop: "{{ purefa_volumegroups }}"
  when:
  - purefa_volumegroups is defined
  - item.pg is defined
  - item.pg.snapshot is defined
  tags:
  - purefa_protectiongroups
